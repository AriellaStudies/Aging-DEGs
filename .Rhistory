TC2 <- TotalCounts_byGene[which(TotalCounts_byGene$Total_Count > 1 | TotalCounts_byGene$Total_Count < -1),]
YoungCounts_byGene <- read.csv("Young_Counts.csv")
YoungCounts_numbers <- YoungCounts_byGene[,2]
colnames(YoungCounts_byGene)<-c("Gene","Young_Count")
#adjust HERE to change histogram left limit (1 of 2):
YC2 <- YoungCounts_byGene[which(YoungCounts_byGene$Young_Count > 2),]
YC2L <- YC2[,2]
OldCounts_byGene <- read.csv("Old_Counts.csv")
OldCounts_numbers <- OldCounts_byGene[,2]
colnames(OldCounts_byGene)<-c("Gene","Old_Count")
#adjust HERE to change histogram left limit (2 of 2):
OC2 <- OldCounts_byGene[which(OldCounts_byGene$Old_Count > 2),]
OC2L <- OC2[,2]
YC2$Type <- "Young"
OC2$Type <- "Old"
colnames(YC2) <- c("Gene", "Count", "Type")
colnames(OC2) <- c("Gene", "Count", "Type")
HistoCounts <- rbind(YC2, OC2)
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal()
ggplot
DS <- read.csv("221_Datasets.csv")
boxplot(DS$DEGs, horizontal=TRUE, main="Number of DEGs per Dataset")
text(x=fivenum(DS$DEGs), labels =fivenum(DS$DEGs), y=1.25)
#Note the middle value is median (50th percentile), not mean.
#Lower hinge is 25th percentile, upper is 75th percentile
DS <- read.csv("221_Datasets.csv")
boxplot(DS$DEGs, horizontal=TRUE, main="Number of DEGs per Dataset")
text(x=fivenum(DS$DEGs), labels =fivenum(DS$DEGs), y=1.25)
#Note the middle value is median (50th percentile), not mean.
#Lower hinge is 25th percentile, upper is 75th percentile
DS <- read.csv("221_Datasets.csv")
boxplot(DS$DEGs, horizontal=TRUE, main="Number of DEGs per Dataset")
text(x=fivenum(DS$DEGs), labels =fivenum(DS$DEGs), y=1.25)
#Note the middle value is median (50th percentile), not mean.
#Lower hinge is 25th percentile, upper is 75th percentile
DS <- read.csv("221_Datasets.csv")
boxplot(DS$DEGs, horizontal=TRUE, main="Number of DEGs per Dataset")
text(x=fivenum(DS$DEGs), labels =fivenum(DS$DEGs), y=1.25)
#Note the middle value is median (50th percentile), not mean.
#Lower hinge is 25th percentile, upper is 75th percentile
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score")
ggplot
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score") +
scale_y_continuous(name = "# DEGs Achieving Score")
ggplot
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score")
ggplot
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:9) +
scale_y_continuous(name = "# DEGs Achieving Score")
ggplot
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:9, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score")
ggplot
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:11, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score")
ggplot
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:, minor_breaks = NULL) +
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:15, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score")
ggplot
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:15, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score", minor_breaks = 1:20)
ggplot
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:15, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score", minor_breaks = 1:40)
ggplot
tT043aM <- GEO2R_pFiltered("GSE25905","GPL6246","000XXXXXXXXX111XXX",1000)
tT043bM <- GEO2R_pFiltered("GSE25905","GPL6246","XXX000XXXXXXXXX111",1000)
tT057M <- GEO2R_pFiltered("GSE27686","GPL1261","111XXXXXX000XXXX",1000)
tT081M <- GEO2R_pFiltered("GSE19677","GPL6333","0000XXXXX1111XXXXX",1000)
tT082M <- GEO2R_pFiltered("GSE19677","GPL1261","XXXX00001X1XX1XXX1",1000)
tT000 <- M2H(tT000M)
tT008 <- M2H(tT008M)
tT011 <- M2H(tT011M)
tT014 <- M2H(tT014M)
tT020 <- M2H(tT020M)
tT043a <- M2H(tT043aM)
tT043b <- M2H(tT043bM)
tT057 <- M2H(tT057M)
tT081 <- M2H(tT081M)
tT082 <- M2H(tT082M)
#Human:
write.table(tT009, file="tT009.txt", row.names=F, sep="\t")
write.table(tT023, file="tT023.txt", row.names=F, sep="\t")
write.table(tT036, file="tT036.txt", row.names=F, sep="\t")
write.table(tT037, file="tT037.txt", row.names=F, sep="\t")
write.table(tT038, file="tT038.txt", row.names=F, sep="\t")
write.table(tT044, file="tT044.txt", row.names=F, sep="\t")
#Mouse:
write.table(tT000, file="tT000.txt", row.names=F, sep="\t")
write.table(tT008, file="tT008.txt", row.names=F, sep="\t")
write.table(tT011, file="tT011.txt", row.names=F, sep="\t")
write.table(tT014, file="tT014.txt", row.names=F, sep="\t")
write.table(tT020, file="tT020.txt", row.names=F, sep="\t")
write.table(tT043a, file="tT043a.txt", row.names=F, sep="\t")
write.table(tT043b, file="tT043b.txt", row.names=F, sep="\t")
write.table(tT057, file="tT057.txt", row.names=F, sep="\t")
write.table(tT081, file="tT081.txt", row.names=F, sep="\t")
write.table(tT082, file="tT082.txt", row.names=F, sep="\t")
TotalCounts_byGene <- read.csv("Total_Counts.csv")
colnames(TotalCounts_byGene)<-c("Gene","Total_Count")
TotalCounts_numbers <- TotalCounts_byGene[,2]
TC2 <- TotalCounts_byGene[which(TotalCounts_byGene$Total_Count > 1 | TotalCounts_byGene$Total_Count < -1),]
YoungCounts_byGene <- read.csv("Young_Counts.csv")
YoungCounts_numbers <- YoungCounts_byGene[,2]
colnames(YoungCounts_byGene)<-c("Gene","Young_Count")
#adjust HERE to change histogram left limit (1 of 2):
YC2 <- YoungCounts_byGene[which(YoungCounts_byGene$Young_Count > 2),]
YC2L <- YC2[,2]
OldCounts_byGene <- read.csv("Old_Counts.csv")
OldCounts_numbers <- OldCounts_byGene[,2]
colnames(OldCounts_byGene)<-c("Gene","Old_Count")
#adjust HERE to change histogram left limit (2 of 2):
OC2 <- OldCounts_byGene[which(OldCounts_byGene$Old_Count > 2),]
OC2L <- OC2[,2]
YC2$Type <- "Young"
OC2$Type <- "Old"
colnames(YC2) <- c("Gene", "Count", "Type")
colnames(OC2) <- c("Gene", "Count", "Type")
HistoCounts <- rbind(YC2, OC2)
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:15, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score", minor_breaks = 1:40)
ggplot
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:15, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score", minor_breaks = 1:100)
ggplot
DS <- read.csv("221_Datasets.csv")
boxplot(DS$DEGs, horizontal=TRUE, main="Number of DEGs per Dataset")
text(x=fivenum(DS$DEGs), labels =fivenum(DS$DEGs), y=1.25)
#Note the middle value is median (50th percentile), not mean.
#Lower hinge is 25th percentile, upper is 75th percentile
DS_List = DS$DEGs
length(DS_List)
DS_Progress = DS[which(DS$DEGs != NA),]
DS_Progress = DS[which(DS$DEGs !== NA),]
DS_Progress = DS[which(DS$DEGs >0),]
View(DS_Progress)
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress)
DS_Progress$Tissue
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
DS_Progress$Tissue
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
DS_Tissues <-DS_Progress$Tissue
counts(DS_Tissues)
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
write.csv(DS_Progress,"DatasetsToDate.csv")
Tissue_DF <- read.csv("Tissue_DF.csv")
View(Tissue_DF)
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme(minimal)
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)+
scale_y_continuous(minor_breaks = NULL)
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
Tissue_DF$Tissue <- noquote(Tissue_DF$Tissue)
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)+
scale_y_continuous(minor_breaks = NULL)
View(Tissue_DF)
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)+
scale_y_continuous(minor_breaks = NULL)
tT092X <- GEO2R_pFiltered("GSE12502","GPL3979","111111000000",1000)
M1Test = c("LOC100503923","Gm15433","LOC100041903","Gm2666","Gm7609","Csprs")
M1Test
dfM1Test = mouse2human(M1Test)
dfM1Test #0 Results
View(dfM1Test)
doggo_symbol = tT092X[,7]
doggo_symbol = tT092X[,7]
doggo_homol = homologene(doggo_symbol,inTax=9615,outTax=9606)
View(doggo_homol)
X2H <- function(animal_tT,TaxID){
AnimalSymbols = animal_tT[,7]
X2H_Symbols = homologene(AnimalSymbols, inTax = TaxID, outTax = 9606)
tTMerge = merge(animal_tT,X2H_Symbols,by.x = "Gene.symbol",by.y = TaxID)
tTReordered = tTMerge[,c(2,3,4,5,6,7,9,8,1)]
return(tTReordered)
}
tT092 <- X2H(tT092X,9615)
X2H <- function(animal_tT,TaxID){
AnimalSymbols = animal_tT[,7]
X2H_Symbols = homologene(AnimalSymbols, inTax = TaxID, outTax = 9606)
tTMerge = merge(animal_tT,X2H_Symbols,by.x = "Gene.symbol",by.y = 9615)
tTReordered = tTMerge[,c(2,3,4,5,6,7,9,8,1)]
return(tTReordered)
}
tT092 <- X2H(tT092X,9615)
X2H <- function(animal_tT,TaxID){
AnimalSymbols = animal_tT[,7]
X2H_Symbols = homologene(AnimalSymbols, inTax = TaxID, outTax = 9606)
taxonomy = toString(TaxID)
tTMerge = merge(animal_tT,X2H_Symbols,by.x = "Gene.symbol",by.y = taxonomy)
tTReordered = tTMerge[,c(2,3,4,5,6,7,9,8,1)]
return(tTReordered)
}
tT092 <- X2H(tT092X,9615)
View(tT092)
#Human:
write.table(tT009, file="tT009.txt", row.names=F, sep="\t")
write.table(tT023, file="tT023.txt", row.names=F, sep="\t")
write.table(tT036, file="tT036.txt", row.names=F, sep="\t")
write.table(tT037, file="tT037.txt", row.names=F, sep="\t")
write.table(tT038, file="tT038.txt", row.names=F, sep="\t")
write.table(tT044, file="tT044.txt", row.names=F, sep="\t")
#Mouse:
write.table(tT000, file="tT000.txt", row.names=F, sep="\t")
write.table(tT008, file="tT008.txt", row.names=F, sep="\t")
write.table(tT011, file="tT011.txt", row.names=F, sep="\t")
write.table(tT014, file="tT014.txt", row.names=F, sep="\t")
write.table(tT020, file="tT020.txt", row.names=F, sep="\t")
write.table(tT043a, file="tT043a.txt", row.names=F, sep="\t")
write.table(tT043b, file="tT043b.txt", row.names=F, sep="\t")
write.table(tT057, file="tT057.txt", row.names=F, sep="\t")
write.table(tT081, file="tT081.txt", row.names=F, sep="\t")
write.table(tT082, file="tT082.txt", row.names=F, sep="\t")
#Other:
write.table(tT092, file="tT092.txt", row.names=F, sep="\t")
TotalCounts_byGene <- read.csv("Total_Counts.csv")
colnames(TotalCounts_byGene)<-c("Gene","Total_Count")
TotalCounts_numbers <- TotalCounts_byGene[,2]
TC2 <- TotalCounts_byGene[which(TotalCounts_byGene$Total_Count > 1 | TotalCounts_byGene$Total_Count < -1),]
YoungCounts_byGene <- read.csv("Young_Counts.csv")
YoungCounts_numbers <- YoungCounts_byGene[,2]
colnames(YoungCounts_byGene)<-c("Gene","Young_Count")
#adjust HERE to change histogram left limit (1 of 2):
YC2 <- YoungCounts_byGene[which(YoungCounts_byGene$Young_Count > 2),]
YC2L <- YC2[,2]
OldCounts_byGene <- read.csv("Old_Counts.csv")
OldCounts_numbers <- OldCounts_byGene[,2]
colnames(OldCounts_byGene)<-c("Gene","Old_Count")
#adjust HERE to change histogram left limit (2 of 2):
OC2 <- OldCounts_byGene[which(OldCounts_byGene$Old_Count > 2),]
OC2L <- OC2[,2]
YC2$Type <- "Young"
OC2$Type <- "Old"
colnames(YC2) <- c("Gene", "Count", "Type")
colnames(OC2) <- c("Gene", "Count", "Type")
HistoCounts <- rbind(YC2, OC2)
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:15, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score", minor_breaks = 1:100)
ggplot
DS <- read.csv("221_Datasets.csv")
boxplot(DS$DEGs, horizontal=TRUE, main="Number of DEGs per Dataset")
text(x=fivenum(DS$DEGs), labels =fivenum(DS$DEGs), y=1.25)
#Note the middle value is median (50th percentile), not mean.
#Lower hinge is 25th percentile, upper is 75th percentile
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
write.csv(DS_Progress,"DatasetsToDate.csv")
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
write.csv(DS_Progress,"DatasetsToDate.csv")
DS <- read.csv("221_Datasets.csv")
boxplot(DS$DEGs, horizontal=TRUE, main="Number of DEGs per Dataset")
text(x=fivenum(DS$DEGs), labels =fivenum(DS$DEGs), y=1.25)
#Note the middle value is median (50th percentile), not mean.
#Lower hinge is 25th percentile, upper is 75th percentile
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
write.csv(DS_Progress,"DatasetsToDate.csv")
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)+
scale_y_continuous(minor_breaks = NULL)
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)+
scale_y_continuous(breaks = 1:10, minor_breaks = NULL)
tT088X <- GEO2R_pFiltered("GSE9990","GPL341","XXXXXXXXXXXXXXXXXXXXXXXXXXX0000000001111111111111",1000)
tT092X <- GEO2R_pFiltered("GSE12502","GPL3979","111111000000",1000)
tT088 <- X2H(tT088X,10116)
tT092 <- X2H(tT092X,9615)
#Human:
write.table(tT009, file="tT009.txt", row.names=F, sep="\t")
write.table(tT023, file="tT023.txt", row.names=F, sep="\t")
write.table(tT036, file="tT036.txt", row.names=F, sep="\t")
write.table(tT037, file="tT037.txt", row.names=F, sep="\t")
write.table(tT038, file="tT038.txt", row.names=F, sep="\t")
write.table(tT044, file="tT044.txt", row.names=F, sep="\t")
#Mouse:
write.table(tT000, file="tT000.txt", row.names=F, sep="\t")
write.table(tT008, file="tT008.txt", row.names=F, sep="\t")
write.table(tT011, file="tT011.txt", row.names=F, sep="\t")
write.table(tT014, file="tT014.txt", row.names=F, sep="\t")
write.table(tT020, file="tT020.txt", row.names=F, sep="\t")
write.table(tT043a, file="tT043a.txt", row.names=F, sep="\t")
write.table(tT043b, file="tT043b.txt", row.names=F, sep="\t")
write.table(tT057, file="tT057.txt", row.names=F, sep="\t")
write.table(tT081, file="tT081.txt", row.names=F, sep="\t")
write.table(tT082, file="tT082.txt", row.names=F, sep="\t")
#Other:
write.table(tT088, file="tT088.txt", row.names=F, sep="\t")
write.table(tT092, file="tT092.txt", row.names=F, sep="\t")
TotalCounts_byGene <- read.csv("Total_Counts.csv")
colnames(TotalCounts_byGene)<-c("Gene","Total_Count")
TotalCounts_numbers <- TotalCounts_byGene[,2]
TC2 <- TotalCounts_byGene[which(TotalCounts_byGene$Total_Count > 1 | TotalCounts_byGene$Total_Count < -1),]
YoungCounts_byGene <- read.csv("Young_Counts.csv")
YoungCounts_numbers <- YoungCounts_byGene[,2]
colnames(YoungCounts_byGene)<-c("Gene","Young_Count")
#adjust HERE to change histogram left limit (1 of 2):
YC2 <- YoungCounts_byGene[which(YoungCounts_byGene$Young_Count > 2),]
YC2L <- YC2[,2]
OldCounts_byGene <- read.csv("Old_Counts.csv")
OldCounts_numbers <- OldCounts_byGene[,2]
colnames(OldCounts_byGene)<-c("Gene","Old_Count")
#adjust HERE to change histogram left limit (2 of 2):
OC2 <- OldCounts_byGene[which(OldCounts_byGene$Old_Count > 2),]
OC2L <- OC2[,2]
YC2$Type <- "Young"
OC2$Type <- "Old"
colnames(YC2) <- c("Gene", "Count", "Type")
colnames(OC2) <- c("Gene", "Count", "Type")
HistoCounts <- rbind(YC2, OC2)
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:15, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score", minor_breaks = 1:100)
ggplot
DS <- read.csv("221_Datasets.csv")
boxplot(DS$DEGs, horizontal=TRUE, main="Number of DEGs per Dataset")
text(x=fivenum(DS$DEGs), labels =fivenum(DS$DEGs), y=1.25)
#Note the middle value is median (50th percentile), not mean.
#Lower hinge is 25th percentile, upper is 75th percentile
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
write.csv(DS_Progress,"DatasetsToDate.csv")
DS <- read.csv("221_Datasets.csv")
boxplot(DS$DEGs, horizontal=TRUE, main="Number of DEGs per Dataset")
text(x=fivenum(DS$DEGs), labels =fivenum(DS$DEGs), y=1.25)
#Note the middle value is median (50th percentile), not mean.
#Lower hinge is 25th percentile, upper is 75th percentile
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
write.csv(DS_Progress,"DatasetsToDate.csv")
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)+
scale_y_continuous(breaks = 1:10, minor_breaks = NULL)
tT058X <- GEO2R_pFiltered("GSE24515","GPL1355","000000111111",1000)
tT088X <- GEO2R_pFiltered("GSE9990","GPL341","XXXXXXXXXXXXXXXXXXXXXXXXXXX0000000001111111111111",1000)
tT092X <- GEO2R_pFiltered("GSE12502","GPL3979","111111000000",1000)
tT058 <- X2H(tT058X,10116)
tT088 <- X2H(tT088X,10116)
tT092 <- X2H(tT092X,9615)
#Human:
write.table(tT009, file="tT009.txt", row.names=F, sep="\t")
write.table(tT023, file="tT023.txt", row.names=F, sep="\t")
write.table(tT036, file="tT036.txt", row.names=F, sep="\t")
write.table(tT037, file="tT037.txt", row.names=F, sep="\t")
write.table(tT038, file="tT038.txt", row.names=F, sep="\t")
write.table(tT044, file="tT044.txt", row.names=F, sep="\t")
#Mouse:
write.table(tT000, file="tT000.txt", row.names=F, sep="\t")
write.table(tT008, file="tT008.txt", row.names=F, sep="\t")
write.table(tT011, file="tT011.txt", row.names=F, sep="\t")
write.table(tT014, file="tT014.txt", row.names=F, sep="\t")
write.table(tT020, file="tT020.txt", row.names=F, sep="\t")
write.table(tT043a, file="tT043a.txt", row.names=F, sep="\t")
write.table(tT043b, file="tT043b.txt", row.names=F, sep="\t")
write.table(tT057, file="tT057.txt", row.names=F, sep="\t")
write.table(tT081, file="tT081.txt", row.names=F, sep="\t")
write.table(tT082, file="tT082.txt", row.names=F, sep="\t")
#Other:
write.table(tT058, file="tT058.txt", row.names=F, sep="\t")
write.table(tT088, file="tT088.txt", row.names=F, sep="\t")
write.table(tT092, file="tT092.txt", row.names=F, sep="\t")
TotalCounts_byGene <- read.csv("Total_Counts.csv")
colnames(TotalCounts_byGene)<-c("Gene","Total_Count")
TotalCounts_numbers <- TotalCounts_byGene[,2]
TC2 <- TotalCounts_byGene[which(TotalCounts_byGene$Total_Count > 1 | TotalCounts_byGene$Total_Count < -1),]
YoungCounts_byGene <- read.csv("Young_Counts.csv")
YoungCounts_numbers <- YoungCounts_byGene[,2]
colnames(YoungCounts_byGene)<-c("Gene","Young_Count")
#adjust HERE to change histogram left limit (1 of 2):
YC2 <- YoungCounts_byGene[which(YoungCounts_byGene$Young_Count > 2),]
YC2L <- YC2[,2]
OldCounts_byGene <- read.csv("Old_Counts.csv")
OldCounts_numbers <- OldCounts_byGene[,2]
colnames(OldCounts_byGene)<-c("Gene","Old_Count")
#adjust HERE to change histogram left limit (2 of 2):
OC2 <- OldCounts_byGene[which(OldCounts_byGene$Old_Count > 2),]
OC2L <- OC2[,2]
YC2$Type <- "Young"
OC2$Type <- "Old"
colnames(YC2) <- c("Gene", "Count", "Type")
colnames(OC2) <- c("Gene", "Count", "Type")
HistoCounts <- rbind(YC2, OC2)
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:15, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score", minor_breaks = 1:100)
ggplot
DS <- read.csv("221_Datasets.csv")
boxplot(DS$DEGs, horizontal=TRUE, main="Number of DEGs per Dataset")
text(x=fivenum(DS$DEGs), labels =fivenum(DS$DEGs), y=1.25)
#Note the middle value is median (50th percentile), not mean.
#Lower hinge is 25th percentile, upper is 75th percentile
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
write.csv(DS_Progress,"DatasetsToDate.csv")
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)+
scale_y_continuous(breaks = 1:10, minor_breaks = NULL)
View(tT009)
