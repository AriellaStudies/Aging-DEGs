DS_Progress$Tissue
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
DS_Progress$Tissue
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
DS_Tissues <-DS_Progress$Tissue
counts(DS_Tissues)
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
write.csv(DS_Progress,"DatasetsToDate.csv")
Tissue_DF <- read.csv("Tissue_DF.csv")
View(Tissue_DF)
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme(minimal)
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)+
scale_y_continuous(minor_breaks = NULL)
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
Tissue_DF$Tissue <- noquote(Tissue_DF$Tissue)
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)+
scale_y_continuous(minor_breaks = NULL)
View(Tissue_DF)
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)+
scale_y_continuous(minor_breaks = NULL)
tT092X <- GEO2R_pFiltered("GSE12502","GPL3979","111111000000",1000)
M1Test = c("LOC100503923","Gm15433","LOC100041903","Gm2666","Gm7609","Csprs")
M1Test
dfM1Test = mouse2human(M1Test)
dfM1Test #0 Results
View(dfM1Test)
doggo_symbol = tT092X[,7]
doggo_symbol = tT092X[,7]
doggo_homol = homologene(doggo_symbol,inTax=9615,outTax=9606)
View(doggo_homol)
X2H <- function(animal_tT,TaxID){
AnimalSymbols = animal_tT[,7]
X2H_Symbols = homologene(AnimalSymbols, inTax = TaxID, outTax = 9606)
tTMerge = merge(animal_tT,X2H_Symbols,by.x = "Gene.symbol",by.y = TaxID)
tTReordered = tTMerge[,c(2,3,4,5,6,7,9,8,1)]
return(tTReordered)
}
tT092 <- X2H(tT092X,9615)
X2H <- function(animal_tT,TaxID){
AnimalSymbols = animal_tT[,7]
X2H_Symbols = homologene(AnimalSymbols, inTax = TaxID, outTax = 9606)
tTMerge = merge(animal_tT,X2H_Symbols,by.x = "Gene.symbol",by.y = 9615)
tTReordered = tTMerge[,c(2,3,4,5,6,7,9,8,1)]
return(tTReordered)
}
tT092 <- X2H(tT092X,9615)
X2H <- function(animal_tT,TaxID){
AnimalSymbols = animal_tT[,7]
X2H_Symbols = homologene(AnimalSymbols, inTax = TaxID, outTax = 9606)
taxonomy = toString(TaxID)
tTMerge = merge(animal_tT,X2H_Symbols,by.x = "Gene.symbol",by.y = taxonomy)
tTReordered = tTMerge[,c(2,3,4,5,6,7,9,8,1)]
return(tTReordered)
}
tT092 <- X2H(tT092X,9615)
View(tT092)
#Human:
write.table(tT009, file="tT009.txt", row.names=F, sep="\t")
write.table(tT023, file="tT023.txt", row.names=F, sep="\t")
write.table(tT036, file="tT036.txt", row.names=F, sep="\t")
write.table(tT037, file="tT037.txt", row.names=F, sep="\t")
write.table(tT038, file="tT038.txt", row.names=F, sep="\t")
write.table(tT044, file="tT044.txt", row.names=F, sep="\t")
#Mouse:
write.table(tT000, file="tT000.txt", row.names=F, sep="\t")
write.table(tT008, file="tT008.txt", row.names=F, sep="\t")
write.table(tT011, file="tT011.txt", row.names=F, sep="\t")
write.table(tT014, file="tT014.txt", row.names=F, sep="\t")
write.table(tT020, file="tT020.txt", row.names=F, sep="\t")
write.table(tT043a, file="tT043a.txt", row.names=F, sep="\t")
write.table(tT043b, file="tT043b.txt", row.names=F, sep="\t")
write.table(tT057, file="tT057.txt", row.names=F, sep="\t")
write.table(tT081, file="tT081.txt", row.names=F, sep="\t")
write.table(tT082, file="tT082.txt", row.names=F, sep="\t")
#Other:
write.table(tT092, file="tT092.txt", row.names=F, sep="\t")
TotalCounts_byGene <- read.csv("Total_Counts.csv")
colnames(TotalCounts_byGene)<-c("Gene","Total_Count")
TotalCounts_numbers <- TotalCounts_byGene[,2]
TC2 <- TotalCounts_byGene[which(TotalCounts_byGene$Total_Count > 1 | TotalCounts_byGene$Total_Count < -1),]
YoungCounts_byGene <- read.csv("Young_Counts.csv")
YoungCounts_numbers <- YoungCounts_byGene[,2]
colnames(YoungCounts_byGene)<-c("Gene","Young_Count")
#adjust HERE to change histogram left limit (1 of 2):
YC2 <- YoungCounts_byGene[which(YoungCounts_byGene$Young_Count > 2),]
YC2L <- YC2[,2]
OldCounts_byGene <- read.csv("Old_Counts.csv")
OldCounts_numbers <- OldCounts_byGene[,2]
colnames(OldCounts_byGene)<-c("Gene","Old_Count")
#adjust HERE to change histogram left limit (2 of 2):
OC2 <- OldCounts_byGene[which(OldCounts_byGene$Old_Count > 2),]
OC2L <- OC2[,2]
YC2$Type <- "Young"
OC2$Type <- "Old"
colnames(YC2) <- c("Gene", "Count", "Type")
colnames(OC2) <- c("Gene", "Count", "Type")
HistoCounts <- rbind(YC2, OC2)
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:15, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score", minor_breaks = 1:100)
ggplot
DS <- read.csv("221_Datasets.csv")
boxplot(DS$DEGs, horizontal=TRUE, main="Number of DEGs per Dataset")
text(x=fivenum(DS$DEGs), labels =fivenum(DS$DEGs), y=1.25)
#Note the middle value is median (50th percentile), not mean.
#Lower hinge is 25th percentile, upper is 75th percentile
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
write.csv(DS_Progress,"DatasetsToDate.csv")
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
write.csv(DS_Progress,"DatasetsToDate.csv")
DS <- read.csv("221_Datasets.csv")
boxplot(DS$DEGs, horizontal=TRUE, main="Number of DEGs per Dataset")
text(x=fivenum(DS$DEGs), labels =fivenum(DS$DEGs), y=1.25)
#Note the middle value is median (50th percentile), not mean.
#Lower hinge is 25th percentile, upper is 75th percentile
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
write.csv(DS_Progress,"DatasetsToDate.csv")
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)+
scale_y_continuous(minor_breaks = NULL)
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)+
scale_y_continuous(breaks = 1:10, minor_breaks = NULL)
tT088X <- GEO2R_pFiltered("GSE9990","GPL341","XXXXXXXXXXXXXXXXXXXXXXXXXXX0000000001111111111111",1000)
tT092X <- GEO2R_pFiltered("GSE12502","GPL3979","111111000000",1000)
tT088 <- X2H(tT088X,10116)
tT092 <- X2H(tT092X,9615)
#Human:
write.table(tT009, file="tT009.txt", row.names=F, sep="\t")
write.table(tT023, file="tT023.txt", row.names=F, sep="\t")
write.table(tT036, file="tT036.txt", row.names=F, sep="\t")
write.table(tT037, file="tT037.txt", row.names=F, sep="\t")
write.table(tT038, file="tT038.txt", row.names=F, sep="\t")
write.table(tT044, file="tT044.txt", row.names=F, sep="\t")
#Mouse:
write.table(tT000, file="tT000.txt", row.names=F, sep="\t")
write.table(tT008, file="tT008.txt", row.names=F, sep="\t")
write.table(tT011, file="tT011.txt", row.names=F, sep="\t")
write.table(tT014, file="tT014.txt", row.names=F, sep="\t")
write.table(tT020, file="tT020.txt", row.names=F, sep="\t")
write.table(tT043a, file="tT043a.txt", row.names=F, sep="\t")
write.table(tT043b, file="tT043b.txt", row.names=F, sep="\t")
write.table(tT057, file="tT057.txt", row.names=F, sep="\t")
write.table(tT081, file="tT081.txt", row.names=F, sep="\t")
write.table(tT082, file="tT082.txt", row.names=F, sep="\t")
#Other:
write.table(tT088, file="tT088.txt", row.names=F, sep="\t")
write.table(tT092, file="tT092.txt", row.names=F, sep="\t")
TotalCounts_byGene <- read.csv("Total_Counts.csv")
colnames(TotalCounts_byGene)<-c("Gene","Total_Count")
TotalCounts_numbers <- TotalCounts_byGene[,2]
TC2 <- TotalCounts_byGene[which(TotalCounts_byGene$Total_Count > 1 | TotalCounts_byGene$Total_Count < -1),]
YoungCounts_byGene <- read.csv("Young_Counts.csv")
YoungCounts_numbers <- YoungCounts_byGene[,2]
colnames(YoungCounts_byGene)<-c("Gene","Young_Count")
#adjust HERE to change histogram left limit (1 of 2):
YC2 <- YoungCounts_byGene[which(YoungCounts_byGene$Young_Count > 2),]
YC2L <- YC2[,2]
OldCounts_byGene <- read.csv("Old_Counts.csv")
OldCounts_numbers <- OldCounts_byGene[,2]
colnames(OldCounts_byGene)<-c("Gene","Old_Count")
#adjust HERE to change histogram left limit (2 of 2):
OC2 <- OldCounts_byGene[which(OldCounts_byGene$Old_Count > 2),]
OC2L <- OC2[,2]
YC2$Type <- "Young"
OC2$Type <- "Old"
colnames(YC2) <- c("Gene", "Count", "Type")
colnames(OC2) <- c("Gene", "Count", "Type")
HistoCounts <- rbind(YC2, OC2)
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:15, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score", minor_breaks = 1:100)
ggplot
DS <- read.csv("221_Datasets.csv")
boxplot(DS$DEGs, horizontal=TRUE, main="Number of DEGs per Dataset")
text(x=fivenum(DS$DEGs), labels =fivenum(DS$DEGs), y=1.25)
#Note the middle value is median (50th percentile), not mean.
#Lower hinge is 25th percentile, upper is 75th percentile
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
write.csv(DS_Progress,"DatasetsToDate.csv")
DS <- read.csv("221_Datasets.csv")
boxplot(DS$DEGs, horizontal=TRUE, main="Number of DEGs per Dataset")
text(x=fivenum(DS$DEGs), labels =fivenum(DS$DEGs), y=1.25)
#Note the middle value is median (50th percentile), not mean.
#Lower hinge is 25th percentile, upper is 75th percentile
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
write.csv(DS_Progress,"DatasetsToDate.csv")
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)+
scale_y_continuous(breaks = 1:10, minor_breaks = NULL)
tT058X <- GEO2R_pFiltered("GSE24515","GPL1355","000000111111",1000)
tT088X <- GEO2R_pFiltered("GSE9990","GPL341","XXXXXXXXXXXXXXXXXXXXXXXXXXX0000000001111111111111",1000)
tT092X <- GEO2R_pFiltered("GSE12502","GPL3979","111111000000",1000)
tT058 <- X2H(tT058X,10116)
tT088 <- X2H(tT088X,10116)
tT092 <- X2H(tT092X,9615)
#Human:
write.table(tT009, file="tT009.txt", row.names=F, sep="\t")
write.table(tT023, file="tT023.txt", row.names=F, sep="\t")
write.table(tT036, file="tT036.txt", row.names=F, sep="\t")
write.table(tT037, file="tT037.txt", row.names=F, sep="\t")
write.table(tT038, file="tT038.txt", row.names=F, sep="\t")
write.table(tT044, file="tT044.txt", row.names=F, sep="\t")
#Mouse:
write.table(tT000, file="tT000.txt", row.names=F, sep="\t")
write.table(tT008, file="tT008.txt", row.names=F, sep="\t")
write.table(tT011, file="tT011.txt", row.names=F, sep="\t")
write.table(tT014, file="tT014.txt", row.names=F, sep="\t")
write.table(tT020, file="tT020.txt", row.names=F, sep="\t")
write.table(tT043a, file="tT043a.txt", row.names=F, sep="\t")
write.table(tT043b, file="tT043b.txt", row.names=F, sep="\t")
write.table(tT057, file="tT057.txt", row.names=F, sep="\t")
write.table(tT081, file="tT081.txt", row.names=F, sep="\t")
write.table(tT082, file="tT082.txt", row.names=F, sep="\t")
#Other:
write.table(tT058, file="tT058.txt", row.names=F, sep="\t")
write.table(tT088, file="tT088.txt", row.names=F, sep="\t")
write.table(tT092, file="tT092.txt", row.names=F, sep="\t")
TotalCounts_byGene <- read.csv("Total_Counts.csv")
colnames(TotalCounts_byGene)<-c("Gene","Total_Count")
TotalCounts_numbers <- TotalCounts_byGene[,2]
TC2 <- TotalCounts_byGene[which(TotalCounts_byGene$Total_Count > 1 | TotalCounts_byGene$Total_Count < -1),]
YoungCounts_byGene <- read.csv("Young_Counts.csv")
YoungCounts_numbers <- YoungCounts_byGene[,2]
colnames(YoungCounts_byGene)<-c("Gene","Young_Count")
#adjust HERE to change histogram left limit (1 of 2):
YC2 <- YoungCounts_byGene[which(YoungCounts_byGene$Young_Count > 2),]
YC2L <- YC2[,2]
OldCounts_byGene <- read.csv("Old_Counts.csv")
OldCounts_numbers <- OldCounts_byGene[,2]
colnames(OldCounts_byGene)<-c("Gene","Old_Count")
#adjust HERE to change histogram left limit (2 of 2):
OC2 <- OldCounts_byGene[which(OldCounts_byGene$Old_Count > 2),]
OC2L <- OC2[,2]
YC2$Type <- "Young"
OC2$Type <- "Old"
colnames(YC2) <- c("Gene", "Count", "Type")
colnames(OC2) <- c("Gene", "Count", "Type")
HistoCounts <- rbind(YC2, OC2)
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:15, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score", minor_breaks = 1:100)
ggplot
DS <- read.csv("221_Datasets.csv")
boxplot(DS$DEGs, horizontal=TRUE, main="Number of DEGs per Dataset")
text(x=fivenum(DS$DEGs), labels =fivenum(DS$DEGs), y=1.25)
#Note the middle value is median (50th percentile), not mean.
#Lower hinge is 25th percentile, upper is 75th percentile
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
write.csv(DS_Progress,"DatasetsToDate.csv")
Tissue_DF <- read.csv("Tissue_DF.csv")
colnames(Tissue_DF) <- c("Tissue", "Count")
ggplot(Tissue_DF, aes(x=Tissue, y=Count, fill=Tissue))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)+
scale_y_continuous(breaks = 1:10, minor_breaks = NULL)
View(tT009)
TotalCounts_byGene <- read.csv("Total_Counts.csv")
colnames(TotalCounts_byGene)<-c("Gene","Total_Count")
TotalCounts_numbers <- TotalCounts_byGene[,2]
TC2 <- TotalCounts_byGene[which(TotalCounts_byGene$Total_Count > 1 | TotalCounts_byGene$Total_Count < -1),]
YoungCounts_byGene <- read.csv("Young_Counts.csv")
YoungCounts_numbers <- YoungCounts_byGene[,2]
colnames(YoungCounts_byGene)<-c("Gene","Young_Count")
#adjust HERE to change histogram left limit (1 of 2):
YC2 <- YoungCounts_byGene[which(YoungCounts_byGene$Young_Count > 3),]
YC2L <- YC2[,2]
OldCounts_byGene <- read.csv("Old_Counts.csv")
OldCounts_numbers <- OldCounts_byGene[,2]
colnames(OldCounts_byGene)<-c("Gene","Old_Count")
#adjust HERE to change histogram left limit (2 of 2):
OC2 <- OldCounts_byGene[which(OldCounts_byGene$Old_Count > 3),]
OC2L <- OC2[,2]
YC2$Type <- "Young"
OC2$Type <- "Old"
colnames(YC2) <- c("Gene", "Count", "Type")
colnames(OC2) <- c("Gene", "Count", "Type")
HistoCounts <- rbind(YC2, OC2)
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:15, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score", minor_breaks = 1:100)
TotalCounts_byGene <- read.csv("Total_Counts.csv")
colnames(TotalCounts_byGene)<-c("Gene","Total_Count")
TotalCounts_numbers <- TotalCounts_byGene[,2]
TC2 <- TotalCounts_byGene[which(TotalCounts_byGene$Total_Count > 1 | TotalCounts_byGene$Total_Count < -1),]
YoungCounts_byGene <- read.csv("Young_Counts.csv")
YoungCounts_numbers <- YoungCounts_byGene[,2]
colnames(YoungCounts_byGene)<-c("Gene","Young_Count")
#adjust HERE to change histogram left limit (1 of 2):
YC2 <- YoungCounts_byGene[which(YoungCounts_byGene$Young_Count > 3),]
YC2L <- YC2[,2]
OldCounts_byGene <- read.csv("Old_Counts.csv")
OldCounts_numbers <- OldCounts_byGene[,2]
colnames(OldCounts_byGene)<-c("Gene","Old_Count")
#adjust HERE to change histogram left limit (2 of 2):
OC2 <- OldCounts_byGene[which(OldCounts_byGene$Old_Count > 3),]
OC2L <- OC2[,2]
YC2$Type <- "Young"
OC2$Type <- "Old"
colnames(YC2) <- c("Gene", "Count", "Type")
colnames(OC2) <- c("Gene", "Count", "Type")
HistoCounts <- rbind(YC2, OC2)
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:15, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score", minor_breaks = 1:100)
library(GEOquery)
library(limma)
library(umap)
library(reticulate)
library(knitr)
library(homologene)
library(ggplot2)
library(dplyr)
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:15, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score", minor_breaks = 1:100)
ggplot
DS <- read.csv("221_Datasets.csv")
boxplot(DS$DEGs, horizontal=TRUE, main="Number of DEGs per Dataset")
text(x=fivenum(DS$DEGs), labels =fivenum(DS$DEGs), y=1.25)
#Note the middle value is median (50th percentile), not mean.
#Lower hinge is 25th percentile, upper is 75th percentile
DS_Progress = DS[which(DS$DEGs >0),]
length(DS_Progress$DEGs)
write.csv(DS_Progress,"DatasetsToDate.csv")
agg <- count(DS_Progress,Tissue,Organism)
ggplot(agg) +
geom_col(aes(x = Tissue, y = n, fill = Organism)) +
theme_minimal()+
theme(axis.text.x = element_text(angle = 70, hjust=1))+
scale_y_continuous(breaks = 1:10, minor_breaks = NULL)+
coord_flip()
DS_Progress %>%
group_by(Tissue) %>%
summarise(sum_DEGs = sum(DEGs), mean_DEGs = mean(DEGs))
DS_Progress %>%
group_by(Tissue) %>%
summarise(Sum_DEGs = sum(DEGs), mean_DEGs = mean(DEGs)) %>%
ggplot(aes(x=Tissue, y = Sum_DEGs, fill = Tissue)) +
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
xlab("")+
guides(fill=FALSE)+
coord_flip()
ggplot(DS_Progress, aes(x=Tissue,y=DEGs, fill=Organism))+
geom_dotplot(binaxis = 'y',stackdir = 'center',dotsize=1.5)+
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust=1))+
coord_flip()
OrthoList <- read.csv("ortholist_master.csv")
OrthoDEGs <- merge(TotalCounts_byGene,OrthoList,by.x = "Gene", by.y = "HGNC.Symbol", all.x = TRUE)
subset_by_counts <- OrthoDEGs[which(OrthoDEGs$Total_Count > 3 | OrthoDEGs$Total_Count < -3),]
DEG_Orthologs <- subset_by_counts[,c("Gene","Total_Count","Locus.ID","Common.Name","No..of.Programs","Ahringer.RNAi.Clone.Location")]
colnames(DEG_Orthologs) <- c("Human.Gene","DE.Score","Worm.Gene","Name","Programs","RNAi")
DEG_Orthologs
write.csv(DEG_Orthologs,"DEG_Orthologs.csv")
no.hum<-length(subset_by_counts$Gene)
cat("Number of human genes queried:",no.hum)
no.notworm <- sum(is.na(DEG_Orthologs$Worm.Gene))
cat("\nNumber without orthologs:",no.notworm)
no.worm <- no.hum - no.notworm
percent.worm <- no.worm/no.hum
cat("\nFraction with orthologs:",percent.worm)
pie_slices <- c(no.notworm,no.worm)
pie_labels <- c("No_Ortholog","Has_Ortholog")
pie(pie_slices,labels=pie_labels)
paste(DEG_Orthologs$Human.Gene, collapse = ", ")
paste(DEG_Orthologs$Name, collapse = ", ")
library(GEOquery)
library(limma)
library(umap)
library(reticulate)
library(knitr)
library(homologene)
library(ggplot2)
library(dplyr)
TotalCounts_byGene <- read.csv("Total_Counts.csv")
colnames(TotalCounts_byGene)<-c("Gene","Total_Count")
TotalCounts_numbers <- TotalCounts_byGene[,2]
#ajust HERE to change the score limit moving forward
TC2 <- TotalCounts_byGene[which(TotalCounts_byGene$Total_Count > 3 | TotalCounts_byGene$Total_Count < -3),]
YoungCounts_byGene <- read.csv("Young_Counts.csv")
YoungCounts_numbers <- YoungCounts_byGene[,2]
colnames(YoungCounts_byGene)<-c("Gene","Young_Count")
#adjust HERE to change histogram left limit (1 of 2):
YC2 <- YoungCounts_byGene[which(YoungCounts_byGene$Young_Count > 3),]
YC2L <- YC2[,2]
OldCounts_byGene <- read.csv("Old_Counts.csv")
OldCounts_numbers <- OldCounts_byGene[,2]
colnames(OldCounts_byGene)<-c("Gene","Old_Count")
#adjust HERE to change histogram left limit (2 of 2):
OC2 <- OldCounts_byGene[which(OldCounts_byGene$Old_Count > 3),]
OC2L <- OC2[,2]
YC2$Type <- "Young"
OC2$Type <- "Old"
colnames(YC2) <- c("Gene", "Count", "Type")
colnames(OC2) <- c("Gene", "Count", "Type")
HistoCounts <- rbind(YC2, OC2)
ggplot(HistoCounts, aes(Count, fill = Type)) +
geom_histogram(alpha = 0.5, color = "black", binwidth = 1, position = "identity") +
theme_minimal() +
scale_x_continuous(name = "Score", breaks = 3:15, minor_breaks = NULL) +
scale_y_continuous(name = "# DEGs Achieving Score", minor_breaks = 1:100)
ggplot
View(TC2)
no.hum<-length(TC2$Gene)
cat("Number of human genes queried:",no.hum)
no.notworm <- sum(is.na(DEG_Orthologs$Worm.Gene))
OrthoList <- read.csv("ortholist_master.csv")
OrthoDEGs <- merge(TotalCounts_byGene,OrthoList,by.x = "Gene", by.y = "HGNC.Symbol", all.x = TRUE)
subset_by_counts <- OrthoDEGs[which(OrthoDEGs$Total_Count > 3 | OrthoDEGs$Total_Count < -3),]
DEG_Orthologs <- subset_by_counts[,c("Gene","Total_Count","Locus.ID","Common.Name","No..of.Programs","Ahringer.RNAi.Clone.Location")]
colnames(DEG_Orthologs) <- c("Human.Gene","DE.Score","Worm.Gene","Name","Programs","RNAi")
DEG_Orthologs
write.csv(DEG_Orthologs,"DEG_Orthologs.csv")
no.hum<-length(TC2$Gene)
cat("Number of human genes queried:",no.hum)
no.notworm <- sum(is.na(DEG_Orthologs$Worm.Gene))
cat("\nNumber without orthologs:",no.notworm)
no.worm <- no.hum - no.notworm
percent.worm <- no.worm/no.hum
cat("\nFraction with orthologs:",percent.worm)
pie_slices <- c(no.notworm,no.worm)
pie_labels <- c("No_Ortholog","Has_Ortholog")
pie(pie_slices,labels=pie_labels)
paste(DEG_Orthologs$Human.Gene, collapse = ", ")
paste(DEG_Orthologs$Name, collapse = ", ")
py_install("seaborn")
